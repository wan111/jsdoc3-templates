<?js
/*
* < attributes > name(params) : {type}  
  < attributes > new name(params)  
    description

    details

    * Parameters:  
       | name       | type       | argument        | default       | description      |
       |------------|------------|-----------------|---------------|------------------|
       | param name | param type | optional        | default value | param descripton |
                                   repeatable
                                   nullable

    * Returns:  

       * {type} description

    * Example:  

       ```
       code
       ```
*/

var self = this;
	captions = self.captions,
	println = self.println(print, "   "),
	attribs = self.partial("attributes.tmpl", {data: data}),
	paramnames = [],
	details = "";

if(data.params){
	data.params.forEach(function(param){
		paramnames.push(param.name);
	});
}

if(data.kind == 'class'){
	println("* " + attribs + "new " + data.name + "(" + paramnames.join(", ") + ")" + "  ", indent);
}else{
	var retTypes = [];
	if(data.returns) data.returns.forEach(function(ret){retTypes.push("{" + ret.type.names.join("|") + "}")});
	println("* " + attribs + data.name + "(" + paramnames.join(", ") + ")" + (retTypes.length ? ' â†’ ' + retTypes.join(", ") : '') + "  ", indent);
}

if(data.description){
	println(data.description, indent + 1);
}

details = self.partial("details.tmpl", {indent: indent + 1, data: data});
if(details){
	print("\n");
	print(details);
}

if(data.params){
	print("\n");
	//print(self.partial('params_list.tmpl', {indent: indent + 1, data: data.params}));
	print(self.partial('params_table.tmpl', {indent: indent + 1, data: data.params}));
}

if(data.returns){
	print("\n");
	print(self.partial('returns.tmpl', {indent: indent + 1, data: data.returns}));
}


if(data.examples){
	print("\n");
	print(self.partial('examples.tmpl', {indent: indent + 1, data: data.examples}));
}
?>