<?js
/*
title

Classes
Modules
Namespaces
Mixins
Externals
Globals
=========

if(constructor){
className
---------

* new className(params)  
   description

   * Parameters:  

      * paramName {type} (optional,nullable,repeatable,default:) description

   * Returns:  

      * {type} description

   * Example:

      ```
      example code
      ```
}else if(object){
objectName
--------------
description
}
* Members:  
   * memberName : {type}  (default=)  
      description

* Methods:  
   * methodName1(params) : {type}  
      description

      * Parameters:  

        * paramName {type} (optional,nullable,repeatable,default:) description

      * Returns:  

        * {type} description

      * Example:  

        ```
        example code
        ```

ChangeLog
=========
*/

var self = this;
var captions = self.captions;
var println = self.println(print, "   ");

if(title){
	println(title, 0);
	println(Array(self.strLength(title) + 1).join("="), 0);
	print("\n");
}

for(var kind in data){
	if(data[kind] && data[kind].length &&
	   (kind == 'classes' || kind == 'namespaces' || kind == 'globals' || kind == 'mixins')){
		//種類ごとに見出し作成
		var caption = captions[kind] || kind
		println(caption, 0);
		println(Array(self.strLength(caption) + 1).join('='), 0);
		if(kind != 'globals') print("\n");

		//全てのオブジェクトを出力
		print(self.partial('objects.tmpl', {indent: 0, kind: kind, data: data[kind]}));
		print("\n");
	}
}

//変更履歴
println(captions.changeLog, 0);
println(Array(self.strLength(captions.changeLog) + 1).join("="), 0);

?>